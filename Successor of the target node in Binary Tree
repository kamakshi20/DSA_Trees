/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root, TreeNode target) {

        List<List<Integer>> result = new ArrayList<>();
        if(root == null)    return result;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);

        while(!queue.isEmpty()){

            int level_size = queue.size();
            List<Integer> level_order = new ArrayList<>();

            for(int i=0; i<level_size; i++){
                TreeNode curr = queue.poll();
                
                if(curr == target){
                  if(queue.isEmpty()){
                    return -1;
                  }
                  return queue.poll();
                }
                if(curr.left != null)   queue.add(curr.left);
                if(curr.right != null)  queue.add(curr.right);
            }
        }
        return -1;       
    }
}
